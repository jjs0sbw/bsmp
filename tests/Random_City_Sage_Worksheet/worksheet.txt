Random_City_Generator
system:sage


<h2>Notebook to Generate City Test Data </h2>
<p>This notebook supports the development and exploration of structural modeling techniques by creating a known order of 19 cites.  Once the known order is complete then the city data is randomly scrambled and a sample of the random city order data is produced.  The random set of city data is used with the city ordering process to structure and order the cities.  The output from the city ordering process is compared with the known city order.  In this manner the city structuring methods and processes can be tested to determine if they perform as expected. </p>

{{{id=1|
#place the load_twenty.sage file in a directory that can be accessed and change the line below to reflect the directory
attach("/Users/jjs0sbw/Desktop/Projects/BSMP/sage_docs/sage_scripts/load_random_generator.sage")
start_process()
///
Start Process Begin ... 
Start Process End ...
}}}

{{{id=13|
#this is a random process so it may not complete, if not just press the evaluate button until it completes. 
input_list = random_input_creation(19)
input_list
///
The make input list function creates a list of city and number pairs.
The list is then used to create the randomized input to the program.
City number list is: 
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]

The known ordered set is: 
{'A': 9, 'C': 12, 'B': 1, 'E': 16, 'D': 17, 'G': 4, 'F': 0, 'I': 18, 'H': 2, 'K': 3, 'J': 7, 'M': 13, 'L': 5, 'O': 15, 'N': 10, 'Q': 8, 'P': 11, 'S': 14, 'R': 6}



 Alphabetical Order is: 
A - 9 - 1 

B - 1 - 2 

C - 12 - 3 

D - 17 - 4 

E - 16 - 5 

F - 0 - 6 

G - 4 - 7 

H - 2 - 8 

I - 18 - 9 

J - 7 - 10 

K - 3 - 11 

L - 5 - 12 

M - 13 - 13 

N - 10 - 14 

O - 15 - 15 

P - 11 - 16 

Q - 8 - 17 

R - 6 - 18 

S - 14 - 19 

The inverse dict is: 
0 - F   1 - 5 

1 - B   2 - 1 

2 - H   3 - 7 

3 - K   4 - 10 

4 - G   5 - 6 

5 - L   6 - 11 

6 - R   7 - 17 

7 - J   8 - 9 

8 - Q   9 - 16 

9 - A   10 - 0 

10 - N   11 - 13 

11 - P   12 - 15 

12 - C   13 - 2 

13 - M   14 - 12 

14 - S   15 - 18 

15 - O   16 - 14 

16 - E   17 - 4 

17 - D   18 - 3 

18 - I   19 - 8 


The ramdon sample input list is: 
input_list contents are: [[[True, 3, 10, 'K', 'N'], [True, 3, 5, 'K', 'L'], [False, 3, 12, 'K', 'C'], [False, 3, 0, 'K', 'F'], [False, 3, 9, 'K', 'A']], [[True, 2, 14, 'H', 'S'], [True, 2, 18, 'H', 'I'], [False, 2, 16, 'H', 'E'], [True, 2, 3, 'H', 'K'], [True, 2, 5, 'H', 'L']], [[True, 16, 4, 'E', 'G'], [True, 16, 3, 'E', 'K'], [False, 16, 9, 'E', 'A'], [True, 16, 11, 'E', 'P'], [True, 16, 6, 'E', 'R']], [[False, 4, 16, 'G', 'E'], [True, 4, 18, 'G', 'I'], [False, 4, 9, 'G', 'A'], [True, 4, 11, 'G', 'P']], [[False, 14, 3, 'S', 'K'], [False, 14, 13, 'S', 'M'], [False, 14, 15, 'S', 'O'], [False, 14, 6, 'S', 'R'], [False, 14, 0, 'S', 'F']], [[True, 0, 8, 'F', 'Q'], [True, 0, 2, 'F', 'H'], [True, 0, 10, 'F', 'N'], [False, 0, 9, 'F', 'A']], [[False, 8, 1, 'Q', 'B'], [False, 8, 18, 'Q', 'I'], [False, 8, 11, 'Q', 'P'], [True, 8, 14, 'Q', 'S'], [False, 8, 5, 'Q', 'L']], [[True, 17, 0, 'D', 'F'], [True, 17, 10, 'D', 'N'], [False, 17, 12, 'D', 'C'], [True, 17, 13, 'D', 'M'], [False, 17, 1, 'D', 'B']], [[False, 6, 7, 'R', 'J'], [False, 6, 0, 'R', 'F'], [False, 6, 17, 'R', 'D'], [False, 6, 4, 'R', 'G']], [[False, 5, 4, 'L', 'G'], [False, 5, 2, 'L', 'H'], [True, 5, 15, 'L', 'O'], [False, 5, 17, 'L', 'D'], [True, 5, 8, 'L', 'Q']], [[False, 7, 16, 'J', 'E'], [True, 7, 5, 'J', 'L'], [False, 7, 9, 'J', 'A'], [False, 7, 4, 'J', 'G'], [True, 7, 6, 'J', 'R']], [[False, 18, 1, 'I', 'B'], [True, 18, 14, 'I', 'S'], [True, 18, 7, 'I', 'J'], [True, 18, 8, 'I', 'Q'], [False, 18, 2, 'I', 'H']], [[False, 13, 17, 'M', 'D'], [True, 13, 6, 'M', 'R'], [True, 13, 14, 'M', 'S'], [True, 13, 15, 'M', 'O'], [False, 13, 18, 'M', 'I']], [[True, 9, 8, 'A', 'Q'], [True, 9, 0, 'A', 'F'], [True, 9, 12, 'A', 'C'], [True, 9, 3, 'A', 'K']], [[False, 11, 17, 'P', 'D'], [False, 11, 12, 'P', 'C'], [False, 11, 3, 'P', 'K'], [False, 11, 5, 'P', 'L']], [[True, 1, 3, 'B', 'K'], [True, 1, 13, 'B', 'M'], [True, 1, 2, 'B', 'H'], [True, 1, 16, 'B', 'E'], [True, 1, 10, 'B', 'N']], [[False, 10, 5, 'N', 'L'], [True, 10, 6, 'N', 'R'], [False, 10, 17, 'N', 'D'], [False, 10, 18, 'N', 'I'], [True, 10, 14, 'N', 'S']], [[False, 15, 3, 'O', 'K'], [True, 15, 8, 'O', 'Q'], [True, 15, 6, 'O', 'R'], [False, 15, 5, 'O', 'L'], [False, 15, 16, 'O', 'E']], [[True, 12, 4, 'C', 'G'], [True, 12, 7, 'C', 'J'], [True, 12, 10, 'C', 'N'], [True, 12, 5, 'C', 'L'], [True, 12, 18, 'C', 'I']]] 

length_list is: [5, 5, 5, 4, 5, 4, 5, 5, 4, 5, 5, 5, 5, 4, 4, 5, 5, 5, 5] 

[[3, 10], [3, 5], [12, 3], [0, 3], [9, 3], [2, 14], [2, 18], [16, 2], [2, 3], [2, 5], [16, 4], [16, 3], [9, 16], [16, 11], [16, 6], [16, 4], [4, 18], [9, 4], [4, 11], [3, 14], [13, 14], [15, 14], [6, 14], [0, 14], [0, 8], [0, 2], [0, 10], [9, 0], [1, 8], [18, 8], [11, 8], [8, 14], [5, 8], [17, 0], [17, 10], [12, 17], [17, 13], [1, 17], [7, 6], [0, 6], [17, 6], [4, 6], [4, 5], [2, 5], [5, 15], [17, 5], [5, 8], [16, 7], [7, 5], [9, 7], [4, 7], [7, 6], [1, 18], [18, 14], [18, 7], [18, 8], [2, 18], [17, 13], [13, 6], [13, 14], [13, 15], [18, 13], [9, 8], [9, 0], [9, 12], [9, 3], [17, 11], [12, 11], [3, 11], [5, 11], [1, 3], [1, 13], [1, 2], [1, 16], [1, 10], [5, 10], [10, 6], [17, 10], [18, 10], [10, 14], [3, 15], [15, 8], [15, 6], [5, 15], [16, 15], [12, 4], [12, 7], [12, 10], [12, 5], [12, 18]]
}}}

{{{id=17|

///
}}}

{{{id=22|

///
}}}